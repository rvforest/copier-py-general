[build-system]
requires = ["hatchling", "versioningit"]
build-backend = "hatchling.build"

[project]
name = "{{project_name}}"
authors = [
    { name = "{{author}}", email = "{{author_email}}" }
]
description = "{{description}}"
readme = "README.md"
requires-python = ">={{py_min_version}}"
license = { file = "LICENSE" }
dynamic = ["version"]
classifiers = [
    "Programming Language :: Python",
{%- for v in py_versions %}
    "Programming Language :: Python :: {{ v }}",
{% endfor -%}
]
dependencies = [
{% if has_cli %}    "typer>=0.9.0",
{% endif %}]

[project.urls]
Homepage = "https://github.com/{{ gh_owner }}/{{ project_name }}"
Documentation = "https://{{ project_name }}.readthedocs.io/"
Source = "https://github.com/{{ gh_owner }}/{{ project_name }}"
Issues = "https://github.com/{{ gh_owner }}/{{ project_name }}/issues"

{% if has_cli %}
[project.scripts]
{{ cli_command }} = "{{ package_name }}.cli.main:app"
{% endif %}

[dependency-groups]
dev = [
  "mypy>=1.15.0",
  "nox>=2025.2.9",
  "pre-commit>=4.2.0",
  "pytest>=8.3.5",
  "pytest-cov>=6.1.1",
  "ruff>=0.11.6",
  "types-pyyaml>=6.0.12.20250516",
]
docs = [
  "furo>=2024.8.6",
  "myst-parser>=3.0.1",
  "pyyaml>=6.0.2",
  "sphinx>=7.4.7",
  "sphinx-autobuild>=2024.10.3",
  "sphinx-autodoc2>=0.5.0",
]

[tool.ruff]
exclude = ["tests/*"]

[tool.ruff.lint]
per-file-ignores = { "__init__.py" = ["F401"] }
select = ["T100"]

[tool.hatch.version]
source = "versioningit"

[tool.versioningit.vcs]
method = "git"
match = ["v*"]
default-tag = "0.1.0"

[tool.versioningit.next-version]
method = "smallest"

[tool.versioningit.format]
distance = "{next_version}.dev{distance}+{vcs}{rev}"
dirty = "{base_version}+d{build_date:%Y%m%d}"
distance-dirty = "{next_version}.dev{distance}+{vcs}{rev}.d{build_date:%Y%m%d}"

[tool.versioningit.template-fields]
pep440 = true

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true
