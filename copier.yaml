# questions
project_name:
  type: str
  help: What is your project name?
  validator: >-
    {% if not (project_name | regex_search('^[a-z][a-z0-9\-]+$')) %}
    project_name must start with a letter, followed one or more letters, digits or dashes all lowercase.
    {% endif %}

package_name:
  type: str
  help: Name of the package, e.g. my_package (auto-generated)
  default: "{{ project_name.replace('-', '_') }}"
  when: false  # Hide from prompts, but available for templates

description:
  type: str
  help: Enter the project's description

gh_owner:
  type: str
  help: Enter the GitHub owner or organization name
  default: ""

author:
  type: str
  help: What is the author's name?
  default: ""

author_email:
  type: str
  help: What is the author's email address?
  default: ""

py_max_version:
  type: str
  help: What is the maximum Python version for this project? (e.g. 3.13)
  default: 3.13
  when: false  # Hide from prompts, but available for templates

py_min_version:
  type: str
  help: What is the minimum Python version for this project? (e.g. 3.9)
  default: 3.13

py_versions:
  type: yaml
  help: List of supported Python versions (auto-generated)
  default: |
    {% set min_minor = py_min_version.split('.')[1]|int %}
    {% set max_minor = py_max_version.split('.')[1]|int %}
    [{% for v in range(min_minor, max_minor + 1) %}"3.{{ v }}"{% if not loop.last %}, {% endif %}{% endfor %}]
  when: false  # Hide from prompts, but available for templates

has_cli:
  type: bool
  help: Does this package provide a CLI tool?
  default: false

cli_command:
  type: str
  help: What is the CLI command name?
  default: "{{ project_name }}"
  when: "{{ has_cli }}"

current_year:
  type: str
  help: Current year (auto-generated)
  default: "{{ now().strftime('%Y') }}"
  when: false  # Hide from prompts, but available for templates

_subdirectory: template

_exclude:
  - "{% if not has_cli %}src/{{package_name}}/cli{% endif %}"
_tasks:
  # Create initial commit with only README so that dynamic version lookup succeeds
  # Don't commit other files so that developer can modify before adding to repo
  - when: "{{ _copier_operation == 'copy' }}"
    command: |
      git init --initial-branch=main
      git add README.md
      git commit -m "Initial commit"
